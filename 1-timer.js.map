{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst refs = {\n  btn: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nrefs.btn.disabled = true;\nconst timeData = {\n  selectedDate: null,\n  interval: null,\n};\n\nconst SECOND = 1000;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\n\nfunction timeToDispay(num) {\n  return String(num).padStart(2, '0');\n}\n\nfunction displayTimeLeft(deltaTime) {\n  const days = Math.floor(deltaTime / DAY);\n  const hours = Math.floor((deltaTime % DAY) / HOUR);\n  const minutes = Math.floor((deltaTime % HOUR) / MINUTE);\n  const seconds = Math.floor((deltaTime % MINUTE) / SECOND);\n  refs.days.textContent = timeToDispay(days);\n  refs.hours.textContent = timeToDispay(hours);\n  refs.minutes.textContent = timeToDispay(minutes);\n  refs.seconds.textContent = timeToDispay(seconds);\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    timeData.selectedDate = selectedDates[0];\n    if (timeData.selectedDate > new Date()) {\n      refs.btn.disabled = false;\n      displayTimeLeft(timeData.selectedDate - new Date());\n    } else {\n      displayTimeLeft(0);\n    }\n    if (timeData.interval) {\n      clearInterval(timeData.interval);\n      timeData.interval = null;\n    }\n  },\n};\n\nflatpickr('input#datetime-picker', options);\n\nrefs.btn.addEventListener('click', event => {\n  if (timeData.interval) {\n    clearInterval(timeData.interval);\n    timeData.interval = null;\n  }\n  displayTimeLeft(timeData.selectedDate - new Date());\n\n  timeData.interval = setInterval(() => {\n    const currentDate = new Date();\n    const deltaTime = timeData.selectedDate - currentDate;\n    displayTimeLeft(deltaTime);\n    if (deltaTime < SECOND) {\n      clearInterval(timeData.interval);\n      displayTimeLeft(0);\n    }\n  }, 1000);\n});\n"],"names":["refs","timeData","SECOND","MINUTE","HOUR","DAY","timeToDispay","num","displayTimeLeft","deltaTime","days","hours","minutes","seconds","options","selectedDates","flatpickr","event","currentDate"],"mappings":"0xBAGA,MAAMA,EAAO,CACX,IAAK,SAAS,cAAc,oBAAoB,EAChD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEAA,EAAK,IAAI,SAAW,GACpB,MAAMC,EAAW,CACf,aAAc,KACd,SAAU,IACZ,EAEMC,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAEnB,SAASE,EAAaC,EAAK,CACzB,OAAO,OAAOA,CAAG,EAAE,SAAS,EAAG,GAAG,CACpC,CAEA,SAASC,EAAgBC,EAAW,CAClC,MAAMC,EAAO,KAAK,MAAMD,EAAYJ,CAAG,EACjCM,EAAQ,KAAK,MAAOF,EAAYJ,EAAOD,CAAI,EAC3CQ,EAAU,KAAK,MAAOH,EAAYL,EAAQD,CAAM,EAChDU,EAAU,KAAK,MAAOJ,EAAYN,EAAUD,CAAM,EACxDF,EAAK,KAAK,YAAcM,EAAaI,CAAI,EACzCV,EAAK,MAAM,YAAcM,EAAaK,CAAK,EAC3CX,EAAK,QAAQ,YAAcM,EAAaM,CAAO,EAC/CZ,EAAK,QAAQ,YAAcM,EAAaO,CAAO,CACjD,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBd,EAAS,aAAec,EAAc,CAAC,EACnCd,EAAS,aAAe,IAAI,MAC9BD,EAAK,IAAI,SAAW,GACpBQ,EAAgBP,EAAS,aAAe,IAAI,IAAM,GAElDO,EAAgB,CAAC,EAEfP,EAAS,WACX,cAAcA,EAAS,QAAQ,EAC/BA,EAAS,SAAW,KAEvB,CACH,EAEAe,EAAU,wBAAyBF,CAAO,EAE1Cd,EAAK,IAAI,iBAAiB,QAASiB,GAAS,CACtChB,EAAS,WACX,cAAcA,EAAS,QAAQ,EAC/BA,EAAS,SAAW,MAEtBO,EAAgBP,EAAS,aAAe,IAAI,IAAM,EAElDA,EAAS,SAAW,YAAY,IAAM,CACpC,MAAMiB,EAAc,IAAI,KAClBT,EAAYR,EAAS,aAAeiB,EAC1CV,EAAgBC,CAAS,EACrBA,EAAYP,IACd,cAAcD,EAAS,QAAQ,EAC/BO,EAAgB,CAAC,EAEpB,EAAE,GAAI,CACT,CAAC"}