{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst refs = {\n  btn: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nrefs.btn.disabled = true;\n\nlet userSelectedDate;\nlet timerInterval;\n\nconst SECOND = 1000;\nconst MINUTE = SECOND * 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\n\nfunction timeToDispay(num) {\n  return String(num).padStart(2, '0');\n}\n\nfunction displayTimeLeft(deltaTime) {\n  const days = Math.floor(deltaTime / DAY);\n  const hours = Math.floor((deltaTime % DAY) / HOUR);\n  const minutes = Math.floor((deltaTime % HOUR) / MINUTE);\n  const seconds = Math.floor((deltaTime % MINUTE) / SECOND);\n  refs.days.textContent = timeToDispay(days);\n  refs.hours.textContent = timeToDispay(hours);\n  refs.minutes.textContent = timeToDispay(minutes);\n  refs.seconds.textContent = timeToDispay(seconds);\n}\n\nfunction intervalClear() {\n  if (timerInterval) {\n    clearInterval(timerInterval);\n    timerInterval = null;\n  }\n}\n\nfunction checkTimer() {\n  const date = userSelectedDate - new Date();\n  refs.btn.disabled = !(date > 0);\n  displayTimeLeft(!refs.btn.disabled ? date : 0);\n  return !refs.btn.disabled;\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    checkTimer();\n    intervalClear();\n  },\n};\n\nflatpickr('input#datetime-picker', options);\n\nrefs.btn.addEventListener('click', event => {\n  intervalClear();\n\n  if (checkTimer()) {\n    timerInterval = setInterval(() => {\n      const currentDate = new Date();\n      const deltaTime = userSelectedDate - currentDate;\n      displayTimeLeft(deltaTime);\n      if (deltaTime < SECOND) {\n        clearInterval(timerInterval);\n        displayTimeLeft(0);\n      }\n    }, 1000);\n  }\n});\n"],"names":["refs","userSelectedDate","timerInterval","SECOND","MINUTE","HOUR","DAY","timeToDispay","num","displayTimeLeft","deltaTime","days","hours","minutes","seconds","intervalClear","checkTimer","date","options","selectedDates","flatpickr","event"],"mappings":"0xBAGA,MAAMA,EAAO,CACX,IAAK,SAAS,cAAc,oBAAoB,EAChD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEAA,EAAK,IAAI,SAAW,GAEpB,IAAIC,EACAC,EAEJ,MAAMC,EAAS,IACTC,EAASD,EAAS,GAClBE,EAAOD,EAAS,GAChBE,EAAMD,EAAO,GAEnB,SAASE,EAAaC,EAAK,CACzB,OAAO,OAAOA,CAAG,EAAE,SAAS,EAAG,GAAG,CACpC,CAEA,SAASC,EAAgBC,EAAW,CAClC,MAAMC,EAAO,KAAK,MAAMD,EAAYJ,CAAG,EACjCM,EAAQ,KAAK,MAAOF,EAAYJ,EAAOD,CAAI,EAC3CQ,EAAU,KAAK,MAAOH,EAAYL,EAAQD,CAAM,EAChDU,EAAU,KAAK,MAAOJ,EAAYN,EAAUD,CAAM,EACxDH,EAAK,KAAK,YAAcO,EAAaI,CAAI,EACzCX,EAAK,MAAM,YAAcO,EAAaK,CAAK,EAC3CZ,EAAK,QAAQ,YAAcO,EAAaM,CAAO,EAC/Cb,EAAK,QAAQ,YAAcO,EAAaO,CAAO,CACjD,CAEA,SAASC,GAAgB,CACnBb,IACF,cAAcA,CAAa,EAC3BA,EAAgB,KAEpB,CAEA,SAASc,GAAa,CACpB,MAAMC,EAAOhB,EAAmB,IAAI,KACpC,OAAAD,EAAK,IAAI,SAAW,EAAEiB,EAAO,GAC7BR,EAAiBT,EAAK,IAAI,SAAkB,EAAPiB,CAAQ,EACtC,CAACjB,EAAK,IAAI,QACnB,CAEA,MAAMkB,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBlB,EAAmBkB,EAAc,CAAC,EAClCH,IACAD,GACD,CACH,EAEAK,EAAU,wBAAyBF,CAAO,EAE1ClB,EAAK,IAAI,iBAAiB,QAASqB,GAAS,CAC1CN,IAEIC,EAAU,IACZd,EAAgB,YAAY,IAAM,CAEhC,MAAMQ,EAAYT,EADE,IAAI,KAExBQ,EAAgBC,CAAS,EACrBA,EAAYP,IACd,cAAcD,CAAa,EAC3BO,EAAgB,CAAC,EAEpB,EAAE,GAAI,EAEX,CAAC"}